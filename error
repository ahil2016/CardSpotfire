Error(s) during update
Type: SyntaxError
Message: Unexpected token <
Stacktrace: SyntaxError: Unexpected token <
    at eval (<anonymous>)
    at http://localhost:8018/?package=js:40:107
    at Function.globalEval (http://localhost:8018/?package=js:41:3)
    at domManip (http://localhost:8018/?package=js:557:15)
    at jQuery.fn.init.replaceWith (http://localhost:8018/?package=js:586:8)
    at jQuery.fn.init.$.fn.(anonymous function) [as replaceWith] (http://localhost:8018/?package=js:12572:25)
    at Object.<anonymous> (http://localhost:8018/?package=js:12430:127)
    at Function.each (http://localhost:8018/?package=js:43:116)
    at updateDocument (http://localhost:8018/?package=js:12429:52)
    at receiveCallbackFromRequest (http://localhost:8018/?package=js:12446:1)
    
    
    function redrawSrcMx() {
       console.log('redrawing srcmix');
	console.log(srcMxMap);
    }
    
    
<script>
// ops pyramid head count start
		var opsGrade101Val = '';
		var opsGrade108Val = '';
		var opsGrade111Val = '';
		var opsGrade112Val = '';
		var opsGrade116Val = '';
        var opsCwrVal = '';

	$("#opsGrade101 .left-val").on('DOMSubtreeModified', function() {
	    if (!isNaN(parseInt($(this).text()))) {
		opsGrade101Val = parseInt($(this).text());
		redrawOpsPyramid();
	    }
	})
	$("#opsGrade108 .left-val").on('DOMSubtreeModified', function() {
	    if (!isNaN(parseInt($(this).text()))) {
		opsGrade108Val = parseInt($(this).text());
		redrawOpsPyramid();
	    }
	})
	$("#opsGrade111 .left-val").on('DOMSubtreeModified', function() {
	    if (!isNaN(parseInt($(this).text()))) {
		opsGrade111Val = parseInt($(this).text());
		redrawOpsPyramid();
	     }
	})
	$("#opsGrade112 .left-val").on('DOMSubtreeModified', function() {
	    if (!isNaN(parseInt($(this).text()))) {
		opsGrade112Val = parseInt($(this).text());
		redrawOpsPyramid();
	    }
	})
	$("#opsGrade116 .left-val").on('DOMSubtreeModified', function() {
	    if (!isNaN(parseInt($(this).text()))) {
		opsGrade116Val = parseInt($(this).text());
		redrawOpsPyramid();
	    }
	})
    $("#opsCwr .left-val").on('DOMSubtreeModified', function() {
	    if (!isNaN(parseInt($(this).text()))) {
            opsCwrVal = parseInt($(this).text());
		    redrawOpsPyramid();
	    }
	})

	function redrawOpsPyramid() {
		if(!isNaN(opsGrade101Val) && !isNaN(opsGrade108Val) && !isNaN(opsGrade111Val) && !isNaN(opsGrade112Val) && !isNaN(opsGrade116Val) && !isNaN(opsCwrVal)

) {

var maxGradVal = Math.max(opsGrade108Val,opsGrade111Val,opsGrade112Val,opsGrade116Val,opsGrade101Val);
	$("#opsGrade101 .pyramid-bar").css("width", ((opsGrade101Val/maxGradVal) * 100) + '%');
$("#opsGrade108 .pyramid-bar").css("width", ((opsGrade108Val/maxGradVal) * 100) + '%');
$("#opsGrade111 .pyramid-bar").css("width", ((opsGrade111Val/maxGradVal) * 100) + '%');
$("#opsGrade112 .pyramid-bar").css("width", ((opsGrade112Val/maxGradVal) * 100) + '%');
$("#opsGrade116 .pyramid-bar").css("width", ((opsGrade116Val/maxGradVal) * 100) + '%');
$("#opsCwr .pyramid-bar").css("width", ((opsCwrVal/maxGradVal) * 100) + '%');
		}

	}
// ops pyramid head count end
</script>

